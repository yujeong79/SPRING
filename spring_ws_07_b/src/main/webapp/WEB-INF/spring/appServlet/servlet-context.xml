<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Spring MVC가 동작하는데 @Controller에 요청 보내기 위한 기본 설정 진행 (HandlerMapping, HandlerAdapter, ViewResolver 등 빈 등록 -->
	<annotation-driven />

	<!-- 리소스 설정 : /resources/로 시작하는 모든 요청은 /resources/ 디렉토리에서 처리한다. /upload/로 시작하는 모든 요청은 /upload/ 디렉토리에서 처리한다. -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- 리졸브 설정 : 모든 뷰 이름에 대해 /WEB-INF/views/ 디렉토리에서 .jsp 파일을 찾는다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Component Scan 설정 : com.ssafy.ws.controller, com.ssafy.ws.interceptor 패키지에서 특정 어노테이션이 붙은 클래스를 찾아서 빈으로 등록한다. -->
	<context:component-scan
		base-package="com.ssafy.ws.controller" />
	
</beans:beans>
