<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd" id="WebApp_ID" version="5.0">
  <display-name>spring_ws_03_A</display-name>
  
  	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!--  
		서블릿 컨텍스트 설정 : servlet-context.xml 
		
		DispatcherServlet 설정
		- DispatcherServlet은 Spring MVC 프로젝트의 모든 요청을 가로채서 처리한다.
		- servlet-context.xml 파일을 읽어들여서 설정된 대로 동작한다.
	-->
	<!-- Q1. DispatcherServlet을 설정하고 servlet-context.xml 파일을 읽어들이게 합니다. -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/servlet-context.xml</param-value>
		</init-param>
	</servlet>

	<!-- Q2. DispatcherServlet을 /로 매핑하게 합니다. -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!--  
		루트 컨텍스트 설정 : root-context.xml
		- ContextLoaderListener 설정
		- root-context.xml 파일을 읽어들여서 설정된 대로 동작한다.
	-->
	<!-- Q3. 루트 컨텍스트를 root-context.xml 파일로 설정하게 합니다. -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/root-context.xml</param-value>
	</context-param>

	<!-- Q4. 루트 컨텍스트를 로드할 수 있는 ContextLoaderListener를 설정하게 합니다. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
</web-app>