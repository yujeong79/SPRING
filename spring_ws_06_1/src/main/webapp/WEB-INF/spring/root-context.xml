<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis:scan을 사용하기 위해 xmlns:mybatis 속성이 추가되었고 xsi:schemaLocation에 mybatis 정보가 추가 되었다. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 1. 특정 패키지의 하위 클래스를 빈으로 등록하기 위해 컴포넌트 스캔 범위 지정 -->
	<!-- <context:component-scan base-package="com.ssafy.ws"></context:component-scan>
	
	2. 데이터베이스 연결을 위한 dataSource를 등록
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/ssafydb?serverTimezone=UTC"></property>
		<property name="username" value="ssafy"></property>
		<property name="password" value="ssafy"></property>
	</bean>
	
	3. myBatis를 사용하기 위한 sqlSessionFactory를 등록
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath*:mappers**/*.xml"></property>
		<property name="typeAliasesPackage" value="com.ssafy.ws.model.dto"></property>
	</bean> 
	
	4. mybatis와 dao를 맵핑
	<mybatis:scan base-package="com.ssafy.ws.model.dao"/> -->
</beans>
